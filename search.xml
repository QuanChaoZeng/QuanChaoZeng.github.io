<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[LaTeX 各种命令，符号]]></title>
    <url>%2FLaTeX%20%E5%90%84%E7%A7%8D%E5%91%BD%E4%BB%A4%E4%B8%8E%E7%AC%A6%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[函数、符号及特殊字符声调 语法 效果 语法 效果 语法 效果 \bar{x} \acute{\eta} \check{\alpha} \grave{\eta} \breve{a} \ddot{y} \dot{x} \hat{\alpha} \tilde{\iota} 函数 语法 效果 语法 效果 语法 效果 \sin\theta \cos\theta \tan\theta \arcsin\frac{L}{r} \arccos\frac{T}{r} \arctan\frac{L}{T} \sinh g \cosh h \tanh i k’(x)=\lim_{\Delta x\to 0}\frac{k(x)-k(x-\Delta x)}{\Deltax} \exp!t \ln X \lg X \log X \log_\alpha X \arg x \deg x \det x \lim_{t\to n}T 微分 语法 效果 语法 效果 语法 效果 \nabla \partial x \mathrm{d}x \dot x \ddot y 集合 语法 效果 语法 效果 语法 效果 语法 效果 语法 效果 \forall \exists \empty \emptyset \varnothing \in \ni \not\in \notin \subset \subseteq \supset \supseteq \cap \bigcap \cup \bigcup \biguplus \sqsubset \sqsubseteq \sqsupset \sqsupseteq \sqcap \sqcup \bigsqcup 逻辑 语法 效果 语法 效果 语法 效果 语法 效果 p \land \wedge \bigwedge \bar{q} \to p \lor \vee \bigvee \lnot \neg q \setminus \smallsetminus 根号 语法 效果 语法 效果 \sqrt{3} \sqrt[n]{3} 关系符号 语法 效果 \Delta ABC\sim\Delta XYZ \sqrt{3}\approx1.732050808\ldots \simeq \cong \dot= \ggg \gg &gt; \ge \geqq = \leq \leqq &lt; \ll \lll (x-y)^2\equiv(-x+y)^2\equiv x^2-2xy+y^2 x\not\equiv N x\ne A x\neq C t\propto v \pm \mp 几何符号 特征 语法 效果 菱形 \Diamond 正方形 \Box 三角形 Delta \Delta 图型 \triangle 角名 \angle\Alpha\Beta\Gamma 角度 \sin\!\frac{\pi}{3}=\sin60^\operatorname{\omicron}=\frac{\sqrt{3}}{2} 垂直 \perp 箭头符号 语法 效果 语法 效果 语法 效果 \leftarrow \gets \rightarrow \to \leftrightarrow \longleftarrow \longrightarrow \mapsto \longmapsto \hookrightarrow \hookleftarrow \nearrow \searrow \swarrow \nwarrow \uparrow \downarrow \updownarrow 语法 效果 语法 效果 语法 效果 语法 效果 \rightharpoonup \rightharpoondown \leftharpoonup \leftharpoondown \upharpoonleft \upharpoonright \downharpoonleft \downharpoonright 语法 效果 语法 效果 语法 效果 \Leftarrow \Rightarrow \Leftrightarrow \Longleftarrow \Longrightarrow \Longleftrightarrow (or \iff) \Uparrow \Downarrow \Updownarrow 特殊符号 语法 效果 语法 效果 语法 效果 语法 效果 语法 效果 语法 效果 \eth \S \P \% \dagger \ddagger \star * \ldots \smile \frown \wr 语法 效果 语法 效果 语法 效果 \oplus \bigoplus \otimes \bigotimes \times \cdot \div \circ \bullet \bigodot \boxtimes \boxplus 语法 效果 语法 效果 语法 效果 语法 效果 \triangleleft \triangleright \infty \bot \top \vdash \vDash \Vdash \models \lVert \rVert 语法 效果 语法 效果 语法 效果 \imath \hbar \ell \mho \Finv \Re \Im \wp \complement 语法 效果 语法 效果 语法 效果 语法 效果 \diamondsuit \heartsuit \clubsuit \spadesuit \Game \flat \natural \sharp 上标、下标及积分等 功能 语法 效果 上标 a^2 下标 a_2 组合 a^{2+2} a_{i,j} 结合上下标 x_2^3 前置上下标 {}_1^2\!X_3^4 导数 （HTML） x&#39; 导数 （PNG） x^\prime 导数点 \dot{x} \ddot{y} 向量 \vec{c} \overleftarrow{a b} \overrightarrow{c d} 上弧 (注: 正确应该用 \overarc, 但在这里行不通。要用建议的语法作为解决办法) \overset{\frown} {AB} 上划线 \overline{h i j} 下划线 \underline{k l m} 上括号 \overbrace{1+2+\cdots+100} \begin{matrix} 5050 \\ \overbrace{ 1+2+\cdots+100 }\end{matrix} 下括号 \underbrace{a+b+\cdots+z} \begin{matrix} \underbrace{ a+b+\cdots+z } \\ 26\end{matrix} 求和 \sum_{k=1}^N k^2 \begin{matrix} \sum_{k=1}^N k^2 \end{matrix} 极限 \lim_{n \to \infty}x_n \begin{matrix} \lim_{n \to \infty}x_n\end{matrix} 积分 \int_{-N}^{N} e^x\, dx \begin{matrix} \int_{-N}^{N} e^x\, dx\end{matrix} 双重积分 \iint_{D}^{W} \, dx\,dy 三重积分 \iiint_{E}^{V} \, dx\,dy\,dz 四重积分 \iiiint_{F}^{U} \, dx\,dy\,dz\,dt 闭合的曲线、曲面积分 \oint_{C} x^3\, dx + 4y^2\, dy 分数、矩阵和多行列式 功能 语法 效果 分数 \frac{2}{4}=0.5 小型分数 \tfrac{2}{4} = 0.5 大型分数（嵌套） \cfrac{2}{c + \cfrac{2}{d + \cfrac{2}{4}}} =a 大型分数（不嵌套） \dfrac{2}{4} = 0.5 \qquad \dfrac{2}{c + \dfrac{2}{d +\dfrac{2}{4}}} = a 二项式系数 \dbinom{n}{r}=\binom{n}{n-r}=C^n_r=C^n_{n-r} 小型二项式系数 \tbinom{n}{r}=\tbinom{n}{n-r}=C^n_r=C^n_{n-r} 大型二项式系数 \binom{n}{r}=\dbinom{n}{n-r}=C^n_r=C^n_{n-r} 矩阵 \begin{matrix} x &amp; y \\ z &amp; v \end{matrix} \begin{vmatrix} x &amp; y \\ z &amp; v \end{vmatrix} \begin{Vmatrix} x &amp; y \\ z &amp; v \end{Vmatrix} \begin{bmatrix} 0 &amp; \cdots &amp; 0 \\ \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; \cdots &amp; 0 \end{bmatrix} \begin{Bmatrix} x &amp; y \\ z &amp; v \end{Bmatrix} \begin{pmatrix} x &amp; y \\ z &amp; v \end{pmatrix} \bigl( \begin{smallmatrix} a&amp;b\\ c&amp;d \end{smallmatrix} \bigr) 条件定义 f(n) = \begin{cases} n/2, &amp; \mbox{if }n\mbox{ is even} \\ 3n+1, &amp; \mbox{if }n\mbox{ is odd} \end{cases} 多行等式 \begin{align} f(x) &amp; = (m+n)^2 \\ &amp; = m^2+2mn+n^2 \\ \end{align} \begin{alignat}{2} f(x) &amp; = (m-n)^2 \\ f(x) &amp; = (-m+n)^2 \\ &amp; = m^2-2mn+n^2 \\ \end{alignat} 多行等式（左对齐） \begin{array}{lcl} z &amp; = &amp; a \\ f(x,y,z) &amp; = &amp; x + y + z \end{array} 多行等式（右对齐） \begin{array}{lcr} z &amp; = &amp; a \\ f(x,y,z) &amp; = &amp; x + y + z \end{array} 长公式换行 &lt;math&gt;f(x) \,\!&lt;/math&gt; &lt;math&gt;= \sum_{n=0}^\infty a_n x^n &lt;/math&gt; &lt;math&gt;= a_0+a_1x+a_2x^2+\cdots&lt;/math&gt; 方程组 \begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \end{cases} 数组 `\begin{array}{ c c c } a &amp; b &amp; S \ \hline 0&amp;0&amp;1\ 0&amp;1&amp;1\ 1&amp;0&amp;1\ 1&amp;1&amp;0\ \end{array} ` ![ \begin{array}{\ c\ c\ \ c\ } a &amp; b &amp; S \ \hline 0&amp;0&amp;1\ 0&amp;1&amp;1\ 1&amp;0&amp;1\ 1&amp;1&amp;0\ \end{array} ](http://upload.wikimedia.org/wikipedia/zh/math/9/1/5/9151e94ef2bb52c18176dbe4c11921ed.png) 字体希腊字母斜体小写希腊字母一般用于在方程中显示变量。 正体希腊字母 特征 语法 效果 注释/外部链接 大写字母 \Alpha \Beta \Gamma \Delta \Epsilon \Zeta \Eta\Theta ΑΒ Γ ΔΕ Ζ ΗΘ \Rho \Sigma \Tau \Upsilon \Phi \Chi \Psi\Omega ΡΣ Τ ΥΦ Χ ΨΩ 小写字母 \alpha \beta \gamma \delta \epsilon \zeta \eta\theta \iota \kappa\varkappa \lambda \mu \nu \xi \omicron\pi \rho \sigma \tau \upsilon \phi \chi \psi\omega 异体字母 \Epsilon\epsilon\varepsilon \Theta\theta\vartheta \Kappa\kappa\varkappa \Pi\pi\varpi \Rho\rho\varrho \Sigma\sigma\varsigma \Phi\phi\varphi 粗体希腊字母 特征 语法 效果 大写字母 \boldsymbol{\Alpha \Beta \Gamma \Delta \Epsilon \Zeta\Eta \Theta} \boldsymbol{\Iota \Kappa \Lambda \Mu \Nu \Xi \Omicron\Pi} \boldsymbol{\Rho \Sigma \Tau \Upsilon \Phi \Chi \Psi\Omega} 小写字母 \boldsymbol{\alpha \beta \gamma \delta \epsilon \zeta\eta \theta} \boldsymbol{\iota \kappa \lambda \mu \nu \xi \omicron\pi} \boldsymbol{\rho \sigma \tau \upsilon \phi \chi \psi\omega} 异体字母 \boldsymbol{\Epsilon\epsilon\varepsilon} \boldsymbol{\Theta\theta\vartheta} \boldsymbol{\Kappa\kappa\varkappa} \boldsymbol{\Pi\pi\varpi} \boldsymbol{\Rho\rho\varrho} \boldsymbol{\Sigma\sigma\varsigma} \boldsymbol{\Phi\phi\varphi} 已停用字母 \boldsymbol{\digamma} 黑板粗体 语法 **\mathbb{***ABCDEFGHIJKLMNOPQRSTUVWXYZ***}** 效果 黑板粗体（Blackboardbold）一般用于表示数学和物理学中的向量或集合的符号。 备注： 花括号中只有使用大写拉丁字母才能正常显示，使用小写字母或数字会得到其他符号。 正粗体 语法 **\mathbf{***012…abc…ABC…***}** 效果 备注 花括号{}内只能使用拉丁字母和数字，不能使用希腊字母如\alpha等。斜粗体 语法 **\boldsymbol{***012…abc…ABC…\alpha \beta\gamma…***}** 效果 备注 使用\boldsymbol{}可以加粗所有合法的符号。 斜体数字 语法 **\mathit{***0123456789***}** 效果 罗马体 语法 **\mathrm{***012…abc…ABC…***}**或**\mbox{}**或**\operatorname{}** 效果 备注 罗马体可以使用数字和拉丁字母。 手写体 语法 **\mathcal{***ABC…***}** 效果 备注 手写体仅对大写拉丁字母有效。 括号 功能 语法 显示 不好看 ( \frac{1}{2} ) 好看了 \left( \frac{1}{2} \right) 您可以使用 \left 和 \right 来显示不同的括号： 功能 语法 显示 圆括号，小括号 \left( \frac{a}{b} \right) 方括号，中括号 \left[ \frac{a}{b} \right] 花括号，大括号 \left{ \frac{a}{b} \right} 角括号 \left \langle \frac{a}{b} \right \rangle 单竖线，绝对值 \left**\ \frac{a}{b} \right\ ** ![\left\ \frac{a}{b} \right\ ](http://upload.wikimedia.org/wikipedia/zh/math/4/0/d/40d6c8253b08e8801a01b3f6e5069a62.png) 双竖线，范 \left **\ \frac{a}{b} \right \ ** ![\left \ \frac{a}{b} \right \ ](http://upload.wikimedia.org/wikipedia/zh/math/f/3/0/f30a5c412d1e4b4e7c6195ff5d47e947.png) 取整函数 （Floor function） \left \lfloor \frac{a}{b} \right \rfloor 取顶函数 （Ceiling function) \left \lceil \frac{c}{d} \right \rceil 斜线与反斜线 \left / \frac{a}{b} \right \backslash 上下箭头 \left \uparrow \frac{a}{b} \right \downarrow \left \Uparrow \frac{a}{b} \right \Downarrow \left \updownarrow \frac{a}{b} \right\Updownarrow 混合括号 \left [ 0,1 \right ) \left \langle \psi \right \ ![\left 0,1 \right ) ![\left \langle \psi \right \ ](http://upload.wikimedia.org/wikipedia/zh/math/d/a/2/da25fc177fd4c53a2c3399c25685dd4c.png) 单左括号 \left { \frac{a}{b} \right . 单右括号 \left . \frac{a}{b} \right } 备注： 可以使用 \big, \Big, \bigg, \Bigg 控制括号的大小，比如代码 空格注意TEX能够自动处理大多数的空格，但是您有时候需要自己来控制。 功能 语法 显示 宽度 2个quad空格 \alpha\qquad\beta quad空格 \alpha\quad\beta 大空格 \alpha\ \beta 中等空格 \alpha\;\beta 小空格 \alpha\,\beta 没有空格 \alpha\beta 紧贴 \alpha\!\beta 颜色 语法 字体颜色︰{\color{色调}表达式} 背景颜色︰{\pagecolor{色调}表达式} 支援色调表 ＊注︰输入时第一个字母必需以大写输入，如\color{OliveGreen}。]]></content>
      <categories>
        <category>LaTeX语言</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RCD吸收电路原理与设计]]></title>
    <url>%2FRCD%E5%90%B8%E6%94%B6%E7%94%B5%E8%B7%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E8%AE%BE%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[1、RCD吸收电路介绍​ 单端反激式开关电源具有结构简单、输入输出电气隔离、电压升／降范围宽、易于多路输出、可靠性高、造价低等优点，广泛应用于小功率场合。然而，由于漏感影响，反激变换器功率开关管关断时将引起电压尖峰，必须用钳位电路加以抑制。由于RCD钳位电路比有源钳位电路更简洁且易实现，因而在小功率变换场合RCD吸收电路得到广泛使用。 ​ RCD吸收电路它由电阻Rs、电容Cs和二极管VDs构成。电阻Rs也可以与二极管VDs并联连接。RCD吸收电路对过电压的抑制要好于RC吸收电路，与RC电路相比Vce升高的幅度更小。由于可以取大阻值的吸收电阻，在一定程度上降低了损耗。 ​ 在原边反馈IC恒流方案中，RCD起到的作用：1，可以减少漏感在主开关上形成的电压尖峰，2，减少EMI干扰。 2、RCD吸收电路原理​ 引入RCD钳位电路，目的是消耗漏感能量，但不能消耗主励磁电感能量，否则会降低电路效率。要做到这点必须对RC参数进行优化设计，下面分析其工作原理： ​ 当S1关断时，漏感Lk释能，给开关的寄生电容充电，开关电压上升，当其电压上升到吸收电容的电压时，吸收二极管D导通，接着给吸收电容C充电，直到D截止，开关电压被二极管所钳位，接着，开关S1开通，吸收电容C通过R放电。波形如下图： 1)若C值较大，C上电压缓慢上升，副边反激过冲小，变压器能量不能迅速传递到副边，见图3(a)； 2)若C值特别大，电压峰值小于副边反射电压，则钳位电容上电压将一直保持在副边反射电压附近，即钳位电阻变为死负载，一直在消耗磁芯能量，见图3(b) 3)若RC值太小，C上电压很快会降到副边反射电压，故在St开通前，钳位电阻只将成为反激变换器的死负载，消耗变压器的能量，降低效率，见图3(c)； 4)如果RC值取得比较合适，使到S1开通时，C上电压放到接近副边反射电压，到下次导通时，C上能量恰好可以释放完，见图3(d)，这种情况钳位效果较好，但电容峰值电压大，器件应力高。 3、参数设计3.1、主MOS管VD的几部分进行计算： Ⅰ，输入的直流电压V~DC~。 在计算V~DC~时，是依最高输入电压值为准。如宽电压应选择AC265V，即DC375V。$$V_{DC}=V_{DC}*\sqrt{2}$$Ⅱ，次级反射初级的V~OR~。 V~OR~是依在次级输出最高电压,整流二极管压降最大时计算的，如输出电压为：5.0V±5%（依Vo =5.25V计算），二极管VF为0.525V（此值是在1N5822的资料中查找额定电流下VF值).$$V_{OR}=\tfrac{(V_F+V_o)*N_P}{N_S}$$Ⅲ，主MOS管VD的余量V~DS~． V~DS~是依MOS管VD的10%为最小值．如KA05H0165R的VD=650应选择DC65V．$$V_{DS}=V_D*10\%$$Ⅳ，RCD吸收V~RCD~． MOS管的VD减去Ⅰ，Ⅲ三项就剩下VRCD的最大值。实际选取的VRCD应为最大值的90%（这里主要是考虑到开关电源各个元件的分散性，温度漂移和时间飘移等因素得影响）。$$V_{RCD}=(V_D-V_{DC}-V_{DS})*90\%$$注意： ① V~RCD~是计算出理论值，再通过实验进行调整，使得实际值与理论值相吻合． ② V~RCD~必须大于VOR的1.3倍．（如果小于1.3倍，则主MOS管的VD值选择就太低了） ③ MOS管VD应当小于V~DC~的2倍．（如果大于2倍，则主MOS管的VD值就过大了） ④ 如果V~RCD~的实测值小于V~OR~的1.2倍，那么RCD吸收回路就影响电源效率。 ⑤ V~RCD~是由V~RCD~和V~OR~组成的 Ⅴ，RC时间常数τ确定． τ是依开关电源工作频率而定的，一般选择10~20个开关电源周期。 3.2、RC的计算 开关管漏极上的电压由三部分组成：电源电压，反激感应电压，漏感冲击电压。 吸收电路，一定要让他只吸收漏感冲击电压，而不要对另外电压起作用，那样不仅会增大吸收电阻的负担，还会降低开关电源的效率。 首先确定吸收电路所要消耗的功率： 由于吸收电容的另一端是接在正电源上的，所以它的电压只有两部分：反激感应电压，漏感冲击电压。电容C两端电压为VC，变压器漏感为LK，匝比为n,则漏感中电流的下降斜率为： 其中ipk为变压器初级峰值电流。 钳位电容的电压VC应在变换器输入电压最低、满载时确定，一旦确定了VC，则可计算出吸收电路消耗的功率为： 最后，对于钳位电容两端的电压VC根据变压器反射电压nVO确定，通常取2～2.5倍即可，取值过小会引起较大损耗。RCD钳位电路的计算只是确定R与C值的数量级，其具体参数可根据实际测试波形做调整，以达到最佳效果。]]></content>
      <categories>
        <category>电路原理</category>
        <category>电路设计</category>
      </categories>
      <tags>
        <tag>rcd吸收</tag>
        <tag>滤波电路</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo框架next主题进阶优化，让你的博客比美更美]]></title>
    <url>%2Fhexo%E6%A1%86%E6%9E%B6next%E4%B8%BB%E9%A2%98%E8%BF%9B%E9%98%B6%E4%BC%98%E5%8C%96%EF%BC%8C%E8%AE%A9%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%AF%94%E7%BE%8E%E6%9B%B4%E7%BE%8E%2F</url>
    <content type="text"><![CDATA[一、设置动态背景1.1、修改主题的_layout.swig打开 next/layout/_layout.swig，在 &lt; /body&gt;之前添加代码(注意不要放在&lt; /head&gt;的后面) 123&#123;% if theme.canvas_nest %&#125;&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125; 1.2、修改配置文件打开主题配置_config.yml,在修改如下代码：canvas_nest: true 123# add canvas-nest effect# see detail from https://github.com/hustcc/canvas-nest.jscanvas_nest: true 二、点击出现桃心效果打开这个地址：http://7u2ss1.com1.z0.glb.clouddn.com/love.js 拷贝所有代码，在/themes/next/source/js/src里面新建love.js，然后在\themes\next\layout\_layout.swig文件末尾添加以下代码： 1&lt;!-- 页面点击小红心 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 三、添加fork me on github在这个网址：http://tholman.com/github-corners/或者这个网址：https://github.com/blog/273-github-ribbons选择合适的样式复制代码添加到themes/next/layout/_layout.swig文件的&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;后面： 四、Hexo博客添加站内搜索NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia，这里介绍安装本地搜索： 4.1、安装 hexo-generator-search1npm install hexo-generator-search --save 4.2、安装 hexo-generator-searchdb1npm install hexo-generator-searchdb --save 4.3、编辑站点配置文件，添加以下内容12345search: path: search.xml field: post format: html limit: 10000 4.4、编辑主题配置文件，设置Local searchenable为ture123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: ture # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 五、设置文章折叠在主题配置文件中修改如下代码： 123auto_excerpt: enable: true length: 150 默认截取的长度为 150 字符，可以根据需要自行设定 六、修改底部标签样式修改Blog\themes\next\layout\_macro\post.swig中文件，搜索rel=&quot;tag&quot;&gt;#，将#替换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 七、在文章末尾添加文章结束标记7.1、在路径Blog\themes\next\layout\_macro文件夹中新建passage-end-tag.swig文件。7.2、在passage-end-tag.swig添加以下内容12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文到此结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 7.3、打开Blog\themes\next\layout\_macro\post.swig，在post-body之后，post-footer之前（post-footer之前两个DIV），添加以下代码：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 7.4、添加位置，如下图所示： 7.5、修改主题配置文件_config.yml，在末尾添加：123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github page搭建静态博客最新详细教程hexo框架next主题]]></title>
    <url>%2Fgithub%20page%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%9C%80%E6%96%B0%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8Bhexo%E6%A1%86%E6%9E%B6next%E4%B8%BB%E9%A2%98%2F</url>
    <content type="text"><![CDATA[1.1.安装Git前往Git官网下载Windows版本压缩包，下载完成后解压安装。 1.2、安装Node.js前往Node.js官方下载网站，下载Node.js官方安装包，下载完成后同样解压安装。 1.3、安装Hexo到目前为止，安装Hexo所需要的环境已将安装完成，下一步只需要安装Hexo便可以了。点击鼠标右键，看是否有Git bash Here选项。在命令行中输入： 1$ npm install -g hexo-cli Hexo 便安装完成了，介绍一下Hexo常用命令： 1234567hexo new “postName” // 新建文章 hexo new page “pageName” // 新建页面 hexo generate // 生成静态页面至public目录hexo server // 开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy // 将.deploy目录部署到GitHubhexo help // 查看帮助hexo version // 查看Hexo的版本 1.4、创建Hexo文件夹找到想要放置博客的文件夹，比如（D:\Hexo），在该目录下鼠标右击打开Git bash工具，（右键菜单中没有该选项的可以用cmd命令cd等进入该文件夹）。执行下面的语句，会在D:\Hexo文件夹下创建node_modules文件夹： 1$ hexo init 这里init后面可以跟文件目录，比如我想在D\:\Hexo下创建博客文件夹，那么可以用下面的命令： 1$ hexo init D:\Hexo 1.5、本地调试目前为止，已经搭建好自己的Hexo博客了，但是只能在本机上查看。执行以下两个命令（在F:\Hexo目录下），然后在浏览器中输入 localhost:4000 就可以看到自己的博客了 12$ hexo generate $ hexo server 但是只能在本地查看，如果想让别人也能访问，那么就需要部署到Github 上面，下面，我们就部署上去。 2、注册Github账户、配置ssh2.1、注册Github账户 访问Github首页 点击右上角的 Sign Up，注册自己的账户，使用邮箱注册的务必进行邮箱验证。 2.2、创建项目代码库 注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击New repository。 创建要点如下： 2.3、配置SSH密钥配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下： 2.3.1、看看是否存在SSH密钥(keys) 首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行: 1$ cd ~/. ssh 检查你本机用户home目录下是否存在.ssh目录 如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。 2.3.2、创建一对新的SSH密钥(keys) 1234$ssh-keygen -t rsa -C &quot;your_email@example.com&quot;#这将按照你提供的邮箱地址，创建一对密钥Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter] 直接回车，则将密钥按默认文件进行存储。此时也可以输入特定的文件名，比如/c/Users/you/.ssh/github_rsa接着，根据提示，你需要输入密码和确认密码（如果不需要密码，可以直接回车，所以每次push就只管回车就行了。）。相关提示如下： 12Enter passphrase (empty for no passphrase): [Type a passphrase]Enter same passphrase again: [Type passphrase again] 输入完成之后，屏幕会显示如下信息： 1234Your identification has been saved in /c/Users/you/.ssh/id_rsa.Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.The key fingerprint is:01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com 2.3.3、在GitHub账户中添加你的公钥 2.3.3.1、打开相应的id_rsa文件，将公钥的内容复制到系统粘贴板(clipboard)中。 2.3.3.2、登陆GitHub,进入你的Account Settings. 2.3.3.3、选择SSH Keys 2.3.4、粘贴密钥，添加即可 2.4、测试可以输入下面的命令，看看设置是否成功 1$ ssh -T git@github.com 如果是下面的反馈： 123The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.Are you sure you want to continue connecting (yes/no)? 不要紧张，输入yes就好，然后会看到： 2.5、设置用户信息现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。 Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字根据自己的喜好自己取，而不是GitHub的昵称。 12$ git config --global user.name &quot;username&quot;//用户名$ git config --global user.email &quot;xxxxxx@163.com&quot;//填写自己的邮箱 2.6、SSH Key配置成功本机已成功连接到github。 3、将本地的文件部署（上传）到Github账户中3.1、登录Github打开自己的项目 username.github.io 3.2、打开之后，点击SSH，选择SSH类型地址 3.3、复制地址 3.4、打开你创建的Hexo文件夹，用记事本打开文件夹下的_config.yml文件 3.5、在配置文件里作如下修改，保存 具体代码如下：repository: 后面是你刚刚从github复制的ssh，别照抄哦！ 1234deploy: type: git repository: http://github.com/username/username.github.io.git branch: master 3.6、在Hexo文件夹下执行：123hexo cleanhexo ghexo d 或者直接执行 1hexo g -d 执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io。 如果报错 ERROR Deployer not found: git，那是你的deployer没有安装成功，你只需要执行如下命令重新安装一次： 1npm install hexo-deployer-git --save 重新执行hexo g -d，你的博客就部署到Github上了。 3.7、在浏览器上输入自己的主页地址在浏览器上输入Github Pager为我们生成的外链https://您的用户名.github.io/，即可看到自己的博客了。当然，每一个人都可以通过这个地址访问到你的博客了。 4、自定义域名4.1、去域名服务商修改解释记录：增加CNAME记录，把域名指向username.github.com。 4.2、到github相应的项目里增加增加CNAME文件： 4.3、查看自定义domain，解释成功后就可以使用自己的域名登录查看自己的博客了。 5、安装配置next主题Next主题的官方地址：http://theme-next.iissnan.com/ Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，称为 站点配置文件，主要包含 Hexo 本身的配置；另一份位于主题目录下，称为 主题配置文件，这份配置由主题作者提供，主要用于配置主题相关的选项。 5.1、安装 NexTHexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。在博客根目录下： 1git clone https://github.com/iissnan/hexo-theme-next themes/next 5.2、启用主题与所有 Hexo 主题启用的模式一样。 当克隆完成后，打开站点配置文件， 找到 theme 字段，并将其值更改为 next。 5.3、验证主题首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 hexo s –debug。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出： 1`INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. ` 此时即可使用浏览器访问 http://localhost:4000 ，检查站点是否正确运行。 当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse 现在，你已经成功安装并启用了 NexT 主题。 5.4、主题设定5.4.1、设置风格 通过修改next主题下的_config.yml的scheme字段，配置不同的风格。Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白；Mist - Muse 的紧凑版本，整洁有序的单栏外观；Pisces - 双栏 Scheme，小家碧玉似的清新。需要用哪个风格只需要把对应的#删除，把其他的注释掉就行。 1234# Schemesscheme: Muse#scheme: Mist#scheme: Pisces 5.4.2、设置语言 编辑站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下： 1`language: zh-Hans ` 5.4.3、设置菜单 通过修改next主题下的_config.yml的menu字段，选定显示的菜单项。 1234567menu: home: / categories: /categories about: /about archives: /archives tags: /tags #commonweal: /404.html 其中，home代表主页，categories代表分类页，about代表关于页面，archives代表归档页，commonweal代表404页面（page not found时候显示的页面）。 5.4.4、侧栏 默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。可以通过修改 主题配置文件中的 sidebar 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。 设置侧栏的位置，修改 sidebar.position 的值，支持的选项有： 123# Sidebar Position, available value: left | right (only for Pisces | Gemini).position: left#position: right 5.4.5、设置头像 编辑站点配置文件，修改字段 avatar，值设置成头像的链接地址，默认是主题下的source/images/avatar.gif 5.4.6、添加网站小图标 将图片主题下的source下的images文件夹下，修改主题配置文件的favicon字段，改成自己图片的文件名，注意后缀。 1`favicon: /images/favicon.ico ` 5.4.7、添加标签、分类、关于页面 前面通过修改next主题下的_config.yml文件中的menu选项，可以在主页面的菜单栏添加标签、分类、关于选项，但是此时点击，跳转的页面会显示page not found。 别怕，添加相应页面就好了：在根目录下git bash，输入以下指令： 123$ hexo new page tags$ hexo new page categories$ hexo new page about 分别在新生成的页面文件index.md里添加： 12345---title: tagsdate: 2016-11-15 19:10:05type: &quot;tags&quot;--- 12345---title: categoriesdate: 2016-11-15 19:11:13type: &quot;categories&quot;--- 设置具体文章的tags、categories 当要为某一篇文章添加标签，只需在myBlog/source/_post目录下的具体文章的tags中添加标签即可，如： 123456---title: 基于Hexo和Github搭建博客date: 2016-11-09tags: [npm, hexo, github]categories: 搭建博客--- 关于我页面index.md可以填写一些对己的介绍等等。 5.4.8、社交小图标 侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在主题配置文件中。 修改主题配置文件的 social 字段，一行一个链接。其键值格式是 显示文本: 链接地址。示例： 12345678# Social linkssocial: GitHub: https://github.com/your-user-name Twitter: https://twitter.com/your-user-name 微博: http://weibo.com/your-user-name 豆瓣: http://douban.com/people/your-user-name 知乎: http://www.zhihu.com/people/your-user-name # 等等 设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。示例： 1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 更多配置请参考官方配置教程。]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
</search>
